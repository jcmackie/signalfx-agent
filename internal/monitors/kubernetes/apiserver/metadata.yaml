monitors:
- monitorType: kubernetes-apiserver
  doc: |
      ```
      monitors:
      - type: kubernetes-apiserver
        discoveryRule: port == 8080
        extraDimensions:
          metric_source: kubernetes-apiserver
      ```
  metrics:
    APIServiceOpenAPIAggregationControllerQueue1_adds:
      default: true
      description: '(Deprecated) Total number of adds handled by workqueue: APIServiceOpenAPIAggregationControllerQueue1'
      type: cumulative
    APIServiceOpenAPIAggregationControllerQueue1_depth:
      default: true
      description: '(Deprecated) Current depth of workqueue: APIServiceOpenAPIAggregationControllerQueue1'
      type: gauge
    APIServiceOpenAPIAggregationControllerQueue1_longest_running_processor_microseconds:
      default: true
      description: (Deprecated) How many microseconds has the longest running processor
        for APIServiceOpenAPIAggregationControllerQueue1 been running.
      type: gauge
    APIServiceOpenAPIAggregationControllerQueue1_queue_latency_count:
      default: true
      description: (Deprecated) How long an item stays in workqueueAPIServiceOpenAPIAggregationControllerQueue1
        before being requested. (count)
      type: cumulative
    APIServiceOpenAPIAggregationControllerQueue1_queue_latency:
      default: true
      description: (Deprecated) How long an item stays in workqueueAPIServiceOpenAPIAggregationControllerQueue1
        before being requested. (sum)
      type: cumulative
    APIServiceOpenAPIAggregationControllerQueue1_queue_latency_quantile:
      default: true
      description: (Deprecated) How long an item stays in workqueueAPIServiceOpenAPIAggregationControllerQueue1
        before being requested. (quantized)
      type: gauge
    APIServiceOpenAPIAggregationControllerQueue1_retries:
      default: true
      description: '(Deprecated) Total number of retries handled by workqueue: APIServiceOpenAPIAggregationControllerQueue1'
      type: cumulative
    APIServiceOpenAPIAggregationControllerQueue1_unfinished_work_seconds:
      default: true
      description: (Deprecated) How many seconds of work APIServiceOpenAPIAggregationControllerQueue1
        has done that is in progress and hasn't been observed by work_duration. Large
        values indicate stuck threads. One can deduce the number of stuck threads
        by observing the rate at which this increases.
      type: gauge
    APIServiceOpenAPIAggregationControllerQueue1_work_duration_count:
      default: true
      description: (Deprecated) How long processing an item from workqueueAPIServiceOpenAPIAggregationControllerQueue1
        takes. (count)
      type: cumulative
    APIServiceOpenAPIAggregationControllerQueue1_work_duration:
      default: true
      description: (Deprecated) How long processing an item from workqueueAPIServiceOpenAPIAggregationControllerQueue1
        takes. (sum)
      type: cumulative
    APIServiceOpenAPIAggregationControllerQueue1_work_duration_quantile:
      default: true
      description: (Deprecated) How long processing an item from workqueueAPIServiceOpenAPIAggregationControllerQueue1
        takes. (quantized)
      type: gauge
    APIServiceRegistrationController_adds:
      default: true
      description: '(Deprecated) Total number of adds handled by workqueue: APIServiceRegistrationController'
      type: cumulative
    APIServiceRegistrationController_depth:
      default: true
      description: '(Deprecated) Current depth of workqueue: APIServiceRegistrationController'
      type: gauge
    APIServiceRegistrationController_longest_running_processor_microseconds:
      default: true
      description: (Deprecated) How many microseconds has the longest running processor
        for APIServiceRegistrationController been running.
      type: gauge
    APIServiceRegistrationController_queue_latency_count:
      default: true
      description: (Deprecated) How long an item stays in workqueueAPIServiceRegistrationController
        before being requested. (count)
      type: cumulative
    APIServiceRegistrationController_queue_latency:
      default: true
      description: (Deprecated) How long an item stays in workqueueAPIServiceRegistrationController
        before being requested. (sum)
      type: cumulative
    APIServiceRegistrationController_queue_latency_quantile:
      default: true
      description: (Deprecated) How long an item stays in workqueueAPIServiceRegistrationController
        before being requested. (quantized)
      type: gauge
    APIServiceRegistrationController_retries:
      default: true
      description: '(Deprecated) Total number of retries handled by workqueue: APIServiceRegistrationController'
      type: cumulative
    APIServiceRegistrationController_unfinished_work_seconds:
      default: true
      description: (Deprecated) How many seconds of work APIServiceRegistrationController
        has done that is in progress and hasn't been observed by work_duration. Large
        values indicate stuck threads. One can deduce the number of stuck threads
        by observing the rate at which this increases.
      type: gauge
    APIServiceRegistrationController_work_duration_count:
      default: true
      description: (Deprecated) How long processing an item from workqueueAPIServiceRegistrationController
        takes. (count)
      type: cumulative
    APIServiceRegistrationController_work_duration:
      default: true
      description: (Deprecated) How long processing an item from workqueueAPIServiceRegistrationController
        takes. (sum)
      type: cumulative
    APIServiceRegistrationController_work_duration_quantile:
      default: true
      description: (Deprecated) How long processing an item from workqueueAPIServiceRegistrationController
        takes. (quantized)
      type: gauge
    AvailableConditionController_adds:
      default: true
      description: '(Deprecated) Total number of adds handled by workqueue: AvailableConditionController'
      type: cumulative
    AvailableConditionController_depth:
      default: true
      description: '(Deprecated) Current depth of workqueue: AvailableConditionController'
      type: gauge
    AvailableConditionController_longest_running_processor_microseconds:
      default: true
      description: (Deprecated) How many microseconds has the longest running processor
        for AvailableConditionController been running.
      type: gauge
    AvailableConditionController_queue_latency_count:
      default: true
      description: (Deprecated) How long an item stays in workqueueAvailableConditionController
        before being requested. (count)
      type: cumulative
    AvailableConditionController_queue_latency:
      default: true
      description: (Deprecated) How long an item stays in workqueueAvailableConditionController
        before being requested. (sum)
      type: cumulative
    AvailableConditionController_queue_latency_quantile:
      default: true
      description: (Deprecated) How long an item stays in workqueueAvailableConditionController
        before being requested. (quantized)
      type: gauge
    AvailableConditionController_retries:
      default: true
      description: '(Deprecated) Total number of retries handled by workqueue: AvailableConditionController'
      type: cumulative
    AvailableConditionController_unfinished_work_seconds:
      default: true
      description: (Deprecated) How many seconds of work AvailableConditionController
        has done that is in progress and hasn't been observed by work_duration. Large
        values indicate stuck threads. One can deduce the number of stuck threads
        by observing the rate at which this increases.
      type: gauge
    AvailableConditionController_work_duration_count:
      default: true
      description: (Deprecated) How long processing an item from workqueueAvailableConditionController
        takes. (count)
      type: cumulative
    AvailableConditionController_work_duration:
      default: true
      description: (Deprecated) How long processing an item from workqueueAvailableConditionController
        takes. (sum)
      type: cumulative
    AvailableConditionController_work_duration_quantile:
      default: true
      description: (Deprecated) How long processing an item from workqueueAvailableConditionController
        takes. (quantized)
      type: gauge
    DiscoveryController_adds:
      default: true
      description: '(Deprecated) Total number of adds handled by workqueue: DiscoveryController'
      type: cumulative
    DiscoveryController_depth:
      default: true
      description: '(Deprecated) Current depth of workqueue: DiscoveryController'
      type: gauge
    DiscoveryController_longest_running_processor_microseconds:
      default: true
      description: (Deprecated) How many microseconds has the longest running processor
        for DiscoveryController been running.
      type: gauge
    DiscoveryController_queue_latency_count:
      default: true
      description: (Deprecated) How long an item stays in workqueueDiscoveryController
        before being requested. (count)
      type: cumulative
    DiscoveryController_queue_latency:
      default: true
      description: (Deprecated) How long an item stays in workqueueDiscoveryController
        before being requested. (sum)
      type: cumulative
    DiscoveryController_queue_latency_quantile:
      default: true
      description: (Deprecated) How long an item stays in workqueueDiscoveryController
        before being requested. (quantized)
      type: gauge
    DiscoveryController_retries:
      default: true
      description: '(Deprecated) Total number of retries handled by workqueue: DiscoveryController'
      type: cumulative
    DiscoveryController_unfinished_work_seconds:
      default: true
      description: (Deprecated) How many seconds of work DiscoveryController has done
        that is in progress and hasn't been observed by work_duration. Large values
        indicate stuck threads. One can deduce the number of stuck threads by observing
        the rate at which this increases.
      type: gauge
    DiscoveryController_work_duration_count:
      default: true
      description: (Deprecated) How long processing an item from workqueueDiscoveryController
        takes. (count)
      type: cumulative
    DiscoveryController_work_duration:
      default: true
      description: (Deprecated) How long processing an item from workqueueDiscoveryController
        takes. (sum)
      type: cumulative
    DiscoveryController_work_duration_quantile:
      default: true
      description: (Deprecated) How long processing an item from workqueueDiscoveryController
        takes. (quantized)
      type: gauge
    admission_quota_controller_adds:
      default: true
      description: '(Deprecated) Total number of adds handled by workqueue: admission_quota_controller'
      type: cumulative
    admission_quota_controller_depth:
      default: true
      description: '(Deprecated) Current depth of workqueue: admission_quota_controller'
      type: gauge
    admission_quota_controller_longest_running_processor_microseconds:
      default: true
      description: (Deprecated) How many microseconds has the longest running processor
        for admission_quota_controller been running.
      type: gauge
    admission_quota_controller_queue_latency_count:
      default: true
      description: (Deprecated) How long an item stays in workqueueadmission_quota_controller
        before being requested. (count)
      type: cumulative
    admission_quota_controller_queue_latency:
      default: true
      description: (Deprecated) How long an item stays in workqueueadmission_quota_controller
        before being requested. (sum)
      type: cumulative
    admission_quota_controller_queue_latency_quantile:
      default: true
      description: (Deprecated) How long an item stays in workqueueadmission_quota_controller
        before being requested. (quantized)
      type: gauge
    admission_quota_controller_unfinished_work_seconds:
      default: true
      description: (Deprecated) How many seconds of work admission_quota_controller
        has done that is in progress and hasn't been observed by work_duration. Large
        values indicate stuck threads. One can deduce the number of stuck threads
        by observing the rate at which this increases.
      type: gauge
    admission_quota_controller_work_duration_count:
      default: true
      description: (Deprecated) How long processing an item from workqueueadmission_quota_controller
        takes. (count)
      type: cumulative
    admission_quota_controller_work_duration:
      default: true
      description: (Deprecated) How long processing an item from workqueueadmission_quota_controller
        takes. (sum)
      type: cumulative
    admission_quota_controller_work_duration_quantile:
      default: true
      description: (Deprecated) How long processing an item from workqueueadmission_quota_controller
        takes. (quantized)
      type: gauge
    apiserver_admission_controller_admission_duration_seconds_count:
      default: true
      description: Admission controller latency histogram in seconds, identified by
        name and broken out for each operation and API resource and type (validate
        or admit). (count)
      type: cumulative
    apiserver_admission_controller_admission_duration_seconds:
      default: true
      description: Admission controller latency histogram in seconds, identified by
        name and broken out for each operation and API resource and type (validate
        or admit). (sum)
      type: cumulative
    apiserver_admission_controller_admission_duration_seconds_bucket:
      default: true
      description: Admission controller latency histogram in seconds, identified by
        name and broken out for each operation and API resource and type (validate
        or admit). (bucket)
      type: cumulative
    apiserver_admission_controller_admission_latencies_milliseconds_count:
      default: true
      description: (Deprecated) Admission controller latency histogram in milliseconds,
        identified by name and broken out for each operation and API resource and
        type (validate or admit). (count)
      type: cumulative
    apiserver_admission_controller_admission_latencies_milliseconds:
      default: true
      description: (Deprecated) Admission controller latency histogram in milliseconds,
        identified by name and broken out for each operation and API resource and
        type (validate or admit). (sum)
      type: cumulative
    apiserver_admission_controller_admission_latencies_milliseconds_bucket:
      default: true
      description: (Deprecated) Admission controller latency histogram in milliseconds,
        identified by name and broken out for each operation and API resource and
        type (validate or admit). (bucket)
      type: cumulative
    apiserver_admission_step_admission_duration_seconds_count:
      default: true
      description: Admission sub-step latency histogram in seconds, broken out for
        each operation and API resource and step type (validate or admit). (count)
      type: cumulative
    apiserver_admission_step_admission_duration_seconds:
      default: true
      description: Admission sub-step latency histogram in seconds, broken out for
        each operation and API resource and step type (validate or admit). (sum)
      type: cumulative
    apiserver_admission_step_admission_duration_seconds_bucket:
      default: true
      description: Admission sub-step latency histogram in seconds, broken out for
        each operation and API resource and step type (validate or admit). (bucket)
      type: cumulative
    apiserver_admission_step_admission_duration_seconds_summary_count:
      default: true
      description: Admission sub-step latency summary in seconds, broken out for each
        operation and API resource and step type (validate or admit). (count)
      type: cumulative
    apiserver_admission_step_admission_duration_seconds_summary:
      default: true
      description: Admission sub-step latency summary in seconds, broken out for each
        operation and API resource and step type (validate or admit). (sum)
      type: cumulative
    apiserver_admission_step_admission_duration_seconds_summary_quantile:
      default: true
      description: Admission sub-step latency summary in seconds, broken out for each
        operation and API resource and step type (validate or admit). (quantized)
      type: gauge
    apiserver_admission_step_admission_latencies_milliseconds_count:
      default: true
      description: (Deprecated) Admission sub-step latency histogram in milliseconds,
        broken out for each operation and API resource and step type (validate or
        admit). (count)
      type: cumulative
    apiserver_admission_step_admission_latencies_milliseconds:
      default: true
      description: (Deprecated) Admission sub-step latency histogram in milliseconds,
        broken out for each operation and API resource and step type (validate or
        admit). (sum)
      type: cumulative
    apiserver_admission_step_admission_latencies_milliseconds_bucket:
      default: true
      description: (Deprecated) Admission sub-step latency histogram in milliseconds,
        broken out for each operation and API resource and step type (validate or
        admit). (bucket)
      type: cumulative
    apiserver_admission_step_admission_latencies_milliseconds_summary_count:
      default: true
      description: (Deprecated) Admission sub-step latency summary in milliseconds,
        broken out for each operation and API resource and step type (validate or
        admit). (count)
      type: cumulative
    apiserver_admission_step_admission_latencies_milliseconds_summary:
      default: true
      description: (Deprecated) Admission sub-step latency summary in milliseconds,
        broken out for each operation and API resource and step type (validate or
        admit). (sum)
      type: cumulative
    apiserver_admission_step_admission_latencies_milliseconds_summary_quantile:
      default: true
      description: (Deprecated) Admission sub-step latency summary in milliseconds,
        broken out for each operation and API resource and step type (validate or
        admit). (quantized)
      type: gauge
    apiserver_audit_event:
      default: true
      description: Counter of audit events generated and sent to the audit backend.
      type: cumulative
    apiserver_audit_requests_rejected:
      default: true
      description: Counter of apiserver requests rejected due to an error in audit
        logging backend.
      type: cumulative
    apiserver_client_certificate_expiration_seconds_count:
      default: true
      description: Distribution of the remaining lifetime on the certificate used
        to authenticate a request. (count)
      type: cumulative
    apiserver_client_certificate_expiration_seconds:
      default: true
      description: Distribution of the remaining lifetime on the certificate used
        to authenticate a request. (sum)
      type: cumulative
    apiserver_client_certificate_expiration_seconds_bucket:
      default: true
      description: Distribution of the remaining lifetime on the certificate used
        to authenticate a request. (bucket)
      type: cumulative
    apiserver_current_inflight_requests:
      default: true
      description: Maximal number of currently used inflight request limit of this
        apiserver per request kind in last second.
      type: gauge
    apiserver_init_events:
      default: true
      description: Counter of init events processed in watchcache broken by resource
        type
      type: cumulative
    apiserver_longrunning_gauge:
      default: true
      description: Gauge of all active long-running apiserver requests broken out
        by verb, group, version, resource, scope and component. Not all requests are
        tracked this way.
      type: gauge
    apiserver_registered_watchers:
      default: true
      description: Number of currently registered watchers for a given resources
      type: gauge
    apiserver_request_count:
      default: true
      description: (Deprecated) Counter of apiserver requests broken out for each
        verb, group, version, resource, scope, component, client, and HTTP response
        contentType and code.
      type: cumulative
    apiserver_request_duration_seconds_count:
      default: true
      description: Response latency distribution in seconds for each verb, dry run
        value, group, version, resource, subresource, scope and component. (count)
      type: cumulative
    apiserver_request_duration_seconds:
      default: true
      description: Response latency distribution in seconds for each verb, dry run
        value, group, version, resource, subresource, scope and component. (sum)
      type: cumulative
    apiserver_request_duration_seconds_bucket:
      default: true
      description: Response latency distribution in seconds for each verb, dry run
        value, group, version, resource, subresource, scope and component. (bucket)
      type: cumulative
    apiserver_request_latencies_count:
      default: true
      description: (Deprecated) Response latency distribution in microseconds for
        each verb, group, version, resource, subresource, scope and component. (count)
      type: cumulative
    apiserver_request_latencies:
      default: true
      description: (Deprecated) Response latency distribution in microseconds for
        each verb, group, version, resource, subresource, scope and component. (sum)
      type: cumulative
    apiserver_request_latencies_bucket:
      default: true
      description: (Deprecated) Response latency distribution in microseconds for
        each verb, group, version, resource, subresource, scope and component. (bucket)
      type: cumulative
    apiserver_request_latencies_summary_count:
      default: true
      description: (Deprecated) Response latency summary in microseconds for each
        verb, group, version, resource, subresource, scope and component. (count)
      type: cumulative
    apiserver_request_latencies_summary:
      default: true
      description: (Deprecated) Response latency summary in microseconds for each
        verb, group, version, resource, subresource, scope and component. (sum)
      type: cumulative
    apiserver_request_latencies_summary_quantile:
      default: true
      description: (Deprecated) Response latency summary in microseconds for each
        verb, group, version, resource, subresource, scope and component. (quantized)
      type: gauge
    apiserver_request:
      default: true
      description: Counter of apiserver requests broken out for each verb, dry run
        value, group, version, resource, scope, component, client, and HTTP response
        contentType and code.
      type: cumulative
    apiserver_response_sizes_count:
      default: true
      description: Response size distribution in bytes for each group, version, verb,
        resource, subresource, scope and component. (count)
      type: cumulative
    apiserver_response_sizes:
      default: true
      description: Response size distribution in bytes for each group, version, verb,
        resource, subresource, scope and component. (sum)
      type: cumulative
    apiserver_response_sizes_bucket:
      default: true
      description: Response size distribution in bytes for each group, version, verb,
        resource, subresource, scope and component. (bucket)
      type: cumulative
    apiserver_storage_data_key_generation_duration_seconds_count:
      default: true
      description: Latencies in seconds of data encryption key(DEK) generation operations.
        (count)
      type: cumulative
    apiserver_storage_data_key_generation_duration_seconds:
      default: true
      description: Latencies in seconds of data encryption key(DEK) generation operations.
        (sum)
      type: cumulative
    apiserver_storage_data_key_generation_duration_seconds_bucket:
      default: true
      description: Latencies in seconds of data encryption key(DEK) generation operations.
        (bucket)
      type: cumulative
    apiserver_storage_data_key_generation_failures:
      default: true
      description: Total number of failed data encryption key(DEK) generation operations.
      type: cumulative
    apiserver_storage_data_key_generation_latencies_microseconds_count:
      default: true
      description: (Deprecated) Latencies in microseconds of data encryption key(DEK)
        generation operations. (count)
      type: cumulative
    apiserver_storage_data_key_generation_latencies_microseconds:
      default: true
      description: (Deprecated) Latencies in microseconds of data encryption key(DEK)
        generation operations. (sum)
      type: cumulative
    apiserver_storage_data_key_generation_latencies_microseconds_bucket:
      default: true
      description: (Deprecated) Latencies in microseconds of data encryption key(DEK)
        generation operations. (bucket)
      type: cumulative
    apiserver_storage_envelope_transformation_cache_misses:
      default: true
      description: Total number of cache misses while accessing key decryption key(KEK).
      type: cumulative
    authenticated_user_requests:
      default: true
      description: Counter of authenticated requests broken out by username.
      type: cumulative
    autoregister_adds:
      default: true
      description: '(Deprecated) Total number of adds handled by workqueue: autoregister'
      type: cumulative
    autoregister_depth:
      default: true
      description: '(Deprecated) Current depth of workqueue: autoregister'
      type: gauge
    autoregister_longest_running_processor_microseconds:
      default: true
      description: (Deprecated) How many microseconds has the longest running processor
        for autoregister been running.
      type: gauge
    autoregister_queue_latency_count:
      default: true
      description: (Deprecated) How long an item stays in workqueueautoregister before
        being requested. (count)
      type: cumulative
    autoregister_queue_latency:
      default: true
      description: (Deprecated) How long an item stays in workqueueautoregister before
        being requested. (sum)
      type: cumulative
    autoregister_queue_latency_quantile:
      default: true
      description: (Deprecated) How long an item stays in workqueueautoregister before
        being requested. (quantized)
      type: gauge
    autoregister_retries:
      default: true
      description: '(Deprecated) Total number of retries handled by workqueue: autoregister'
      type: cumulative
    autoregister_unfinished_work_seconds:
      default: true
      description: (Deprecated) How many seconds of work autoregister has done that
        is in progress and hasn't been observed by work_duration. Large values indicate
        stuck threads. One can deduce the number of stuck threads by observing the
        rate at which this increases.
      type: gauge
    autoregister_work_duration_count:
      default: true
      description: (Deprecated) How long processing an item from workqueueautoregister
        takes. (count)
      type: cumulative
    autoregister_work_duration:
      default: true
      description: (Deprecated) How long processing an item from workqueueautoregister
        takes. (sum)
      type: cumulative
    autoregister_work_duration_quantile:
      default: true
      description: (Deprecated) How long processing an item from workqueueautoregister
        takes. (quantized)
      type: gauge
    crdEstablishing_adds:
      default: true
      description: '(Deprecated) Total number of adds handled by workqueue: crdEstablishing'
      type: cumulative
    crdEstablishing_depth:
      default: true
      description: '(Deprecated) Current depth of workqueue: crdEstablishing'
      type: gauge
    crdEstablishing_longest_running_processor_microseconds:
      default: true
      description: (Deprecated) How many microseconds has the longest running processor
        for crdEstablishing been running.
      type: gauge
    crdEstablishing_queue_latency_count:
      default: true
      description: (Deprecated) How long an item stays in workqueuecrdEstablishing
        before being requested. (count)
      type: cumulative
    crdEstablishing_queue_latency:
      default: true
      description: (Deprecated) How long an item stays in workqueuecrdEstablishing
        before being requested. (sum)
      type: cumulative
    crdEstablishing_queue_latency_quantile:
      default: true
      description: (Deprecated) How long an item stays in workqueuecrdEstablishing
        before being requested. (quantized)
      type: gauge
    crdEstablishing_retries:
      default: true
      description: '(Deprecated) Total number of retries handled by workqueue: crdEstablishing'
      type: cumulative
    crdEstablishing_unfinished_work_seconds:
      default: true
      description: (Deprecated) How many seconds of work crdEstablishing has done
        that is in progress and hasn't been observed by work_duration. Large values
        indicate stuck threads. One can deduce the number of stuck threads by observing
        the rate at which this increases.
      type: gauge
    crdEstablishing_work_duration_count:
      default: true
      description: (Deprecated) How long processing an item from workqueuecrdEstablishing
        takes. (count)
      type: cumulative
    crdEstablishing_work_duration:
      default: true
      description: (Deprecated) How long processing an item from workqueuecrdEstablishing
        takes. (sum)
      type: cumulative
    crdEstablishing_work_duration_quantile:
      default: true
      description: (Deprecated) How long processing an item from workqueuecrdEstablishing
        takes. (quantized)
      type: gauge
    crd_autoregistration_controller_adds:
      default: true
      description: '(Deprecated) Total number of adds handled by workqueue: crd_autoregistration_controller'
      type: cumulative
    crd_autoregistration_controller_depth:
      default: true
      description: '(Deprecated) Current depth of workqueue: crd_autoregistration_controller'
      type: gauge
    crd_autoregistration_controller_longest_running_processor_microseconds:
      default: true
      description: (Deprecated) How many microseconds has the longest running processor
        for crd_autoregistration_controller been running.
      type: gauge
    crd_autoregistration_controller_queue_latency_count:
      default: true
      description: (Deprecated) How long an item stays in workqueuecrd_autoregistration_controller
        before being requested. (count)
      type: cumulative
    crd_autoregistration_controller_queue_latency:
      default: true
      description: (Deprecated) How long an item stays in workqueuecrd_autoregistration_controller
        before being requested. (sum)
      type: cumulative
    crd_autoregistration_controller_queue_latency_quantile:
      default: true
      description: (Deprecated) How long an item stays in workqueuecrd_autoregistration_controller
        before being requested. (quantized)
      type: gauge
    crd_autoregistration_controller_retries:
      default: true
      description: '(Deprecated) Total number of retries handled by workqueue: crd_autoregistration_controller'
      type: cumulative
    crd_autoregistration_controller_unfinished_work_seconds:
      default: true
      description: (Deprecated) How many seconds of work crd_autoregistration_controller
        has done that is in progress and hasn't been observed by work_duration. Large
        values indicate stuck threads. One can deduce the number of stuck threads
        by observing the rate at which this increases.
      type: gauge
    crd_autoregistration_controller_work_duration_count:
      default: true
      description: (Deprecated) How long processing an item from workqueuecrd_autoregistration_controller
        takes. (count)
      type: cumulative
    crd_autoregistration_controller_work_duration:
      default: true
      description: (Deprecated) How long processing an item from workqueuecrd_autoregistration_controller
        takes. (sum)
      type: cumulative
    crd_autoregistration_controller_work_duration_quantile:
      default: true
      description: (Deprecated) How long processing an item from workqueuecrd_autoregistration_controller
        takes. (quantized)
      type: gauge
    crd_finalizer_adds:
      default: true
      description: '(Deprecated) Total number of adds handled by workqueue: crd_finalizer'
      type: cumulative
    crd_finalizer_depth:
      default: true
      description: '(Deprecated) Current depth of workqueue: crd_finalizer'
      type: gauge
    crd_finalizer_longest_running_processor_microseconds:
      default: true
      description: (Deprecated) How many microseconds has the longest running processor
        for crd_finalizer been running.
      type: gauge
    crd_finalizer_queue_latency_count:
      default: true
      description: (Deprecated) How long an item stays in workqueuecrd_finalizer before
        being requested. (count)
      type: cumulative
    crd_finalizer_queue_latency:
      default: true
      description: (Deprecated) How long an item stays in workqueuecrd_finalizer before
        being requested. (sum)
      type: cumulative
    crd_finalizer_queue_latency_quantile:
      default: true
      description: (Deprecated) How long an item stays in workqueuecrd_finalizer before
        being requested. (quantized)
      type: gauge
    crd_finalizer_retries:
      default: true
      description: '(Deprecated) Total number of retries handled by workqueue: crd_finalizer'
      type: cumulative
    crd_finalizer_unfinished_work_seconds:
      default: true
      description: (Deprecated) How many seconds of work crd_finalizer has done that
        is in progress and hasn't been observed by work_duration. Large values indicate
        stuck threads. One can deduce the number of stuck threads by observing the
        rate at which this increases.
      type: gauge
    crd_finalizer_work_duration_count:
      default: true
      description: (Deprecated) How long processing an item from workqueuecrd_finalizer
        takes. (count)
      type: cumulative
    crd_finalizer_work_duration:
      default: true
      description: (Deprecated) How long processing an item from workqueuecrd_finalizer
        takes. (sum)
      type: cumulative
    crd_finalizer_work_duration_quantile:
      default: true
      description: (Deprecated) How long processing an item from workqueuecrd_finalizer
        takes. (quantized)
      type: gauge
    crd_naming_condition_controller_adds:
      default: true
      description: '(Deprecated) Total number of adds handled by workqueue: crd_naming_condition_controller'
      type: cumulative
    crd_naming_condition_controller_depth:
      default: true
      description: '(Deprecated) Current depth of workqueue: crd_naming_condition_controller'
      type: gauge
    crd_naming_condition_controller_longest_running_processor_microseconds:
      default: true
      description: (Deprecated) How many microseconds has the longest running processor
        for crd_naming_condition_controller been running.
      type: gauge
    crd_naming_condition_controller_queue_latency_count:
      default: true
      description: (Deprecated) How long an item stays in workqueuecrd_naming_condition_controller
        before being requested. (count)
      type: cumulative
    crd_naming_condition_controller_queue_latency:
      default: true
      description: (Deprecated) How long an item stays in workqueuecrd_naming_condition_controller
        before being requested. (sum)
      type: cumulative
    crd_naming_condition_controller_queue_latency_quantile:
      default: true
      description: (Deprecated) How long an item stays in workqueuecrd_naming_condition_controller
        before being requested. (quantized)
      type: gauge
    crd_naming_condition_controller_retries:
      default: true
      description: '(Deprecated) Total number of retries handled by workqueue: crd_naming_condition_controller'
      type: cumulative
    crd_naming_condition_controller_unfinished_work_seconds:
      default: true
      description: (Deprecated) How many seconds of work crd_naming_condition_controller
        has done that is in progress and hasn't been observed by work_duration. Large
        values indicate stuck threads. One can deduce the number of stuck threads
        by observing the rate at which this increases.
      type: gauge
    crd_naming_condition_controller_work_duration_count:
      default: true
      description: (Deprecated) How long processing an item from workqueuecrd_naming_condition_controller
        takes. (count)
      type: cumulative
    crd_naming_condition_controller_work_duration:
      default: true
      description: (Deprecated) How long processing an item from workqueuecrd_naming_condition_controller
        takes. (sum)
      type: cumulative
    crd_naming_condition_controller_work_duration_quantile:
      default: true
      description: (Deprecated) How long processing an item from workqueuecrd_naming_condition_controller
        takes. (quantized)
      type: gauge
    etcd_helper_cache_entry_count:
      default: true
      description: (Deprecated) Counter of etcd helper cache entries. This can be
        different from etcd_helper_cache_miss_count because two concurrent threads
        can miss the cache and generate the same entry twice.
      type: cumulative
    etcd_helper_cache_entry:
      default: true
      description: Counter of etcd helper cache entries. This can be different from
        etcd_helper_cache_miss_count because two concurrent threads can miss the cache
        and generate the same entry twice.
      type: cumulative
    etcd_helper_cache_hit_count:
      default: true
      description: (Deprecated) Counter of etcd helper cache hits.
      type: cumulative
    etcd_helper_cache_hit:
      default: true
      description: Counter of etcd helper cache hits.
      type: cumulative
    etcd_helper_cache_miss_count:
      default: true
      description: (Deprecated) Counter of etcd helper cache miss.
      type: cumulative
    etcd_helper_cache_miss:
      default: true
      description: Counter of etcd helper cache miss.
      type: cumulative
    etcd_object_counts:
      default: true
      description: Number of stored objects at the time of last check split by kind.
      type: gauge
    etcd_request_cache_add_duration_seconds_count:
      default: true
      description: Latency in seconds of adding an object to etcd cache (count)
      type: cumulative
    etcd_request_cache_add_duration_seconds:
      default: true
      description: Latency in seconds of adding an object to etcd cache (sum)
      type: cumulative
    etcd_request_cache_add_duration_seconds_bucket:
      default: true
      description: Latency in seconds of adding an object to etcd cache (bucket)
      type: cumulative
    etcd_request_cache_add_latencies_summary_count:
      default: true
      description: (Deprecated) Latency in microseconds of adding an object to etcd
        cache (count)
      type: cumulative
    etcd_request_cache_add_latencies_summary:
      default: true
      description: (Deprecated) Latency in microseconds of adding an object to etcd
        cache (sum)
      type: cumulative
    etcd_request_cache_add_latencies_summary_quantile:
      default: true
      description: (Deprecated) Latency in microseconds of adding an object to etcd
        cache (quantized)
      type: gauge
    etcd_request_cache_get_duration_seconds_count:
      default: true
      description: Latency in seconds of getting an object from etcd cache (count)
      type: cumulative
    etcd_request_cache_get_duration_seconds:
      default: true
      description: Latency in seconds of getting an object from etcd cache (sum)
      type: cumulative
    etcd_request_cache_get_duration_seconds_bucket:
      default: true
      description: Latency in seconds of getting an object from etcd cache (bucket)
      type: cumulative
    etcd_request_cache_get_latencies_summary_count:
      default: true
      description: (Deprecated) Latency in microseconds of getting an object from
        etcd cache (count)
      type: cumulative
    etcd_request_cache_get_latencies_summary:
      default: true
      description: (Deprecated) Latency in microseconds of getting an object from
        etcd cache (sum)
      type: cumulative
    etcd_request_cache_get_latencies_summary_quantile:
      default: true
      description: (Deprecated) Latency in microseconds of getting an object from
        etcd cache (quantized)
      type: gauge
    get_token_count:
      default: true
      description: Counter of total Token() requests to the alternate token source
      type: cumulative
    get_token_fail_count:
      default: true
      description: Counter of failed Token() requests to the alternate token source
      type: cumulative
    go_gc_duration_seconds_count:
      default: true
      description: A summary of the GC invocation durations. (count)
      type: cumulative
    go_gc_duration_seconds:
      default: true
      description: A summary of the GC invocation durations. (sum)
      type: cumulative
    go_gc_duration_seconds_quantile:
      default: true
      description: A summary of the GC invocation durations. (quantized)
      type: gauge
    go_goroutines:
      default: true
      description: Number of goroutines that currently exist.
      type: gauge
    go_info:
      default: true
      description: Information about the Go environment.
      type: gauge
    go_memstats_alloc_bytes:
      default: true
      description: Total number of bytes allocated, even if freed.
      type: cumulative
    go_memstats_buck_hash_sys_bytes:
      default: true
      description: Number of bytes used by the profiling bucket hash table.
      type: gauge
    go_memstats_frees:
      default: true
      description: Total number of frees.
      type: cumulative
    go_memstats_gc_cpu_fraction:
      default: true
      description: The fraction of this program's available CPU time used by the GC
        since the program started.
      type: gauge
    go_memstats_gc_sys_bytes:
      default: true
      description: Number of bytes used for garbage collection system metadata.
      type: gauge
    go_memstats_heap_alloc_bytes:
      default: true
      description: Number of heap bytes allocated and still in use.
      type: gauge
    go_memstats_heap_idle_bytes:
      default: true
      description: Number of heap bytes waiting to be used.
      type: gauge
    go_memstats_heap_inuse_bytes:
      default: true
      description: Number of heap bytes that are in use.
      type: gauge
    go_memstats_heap_objects:
      default: true
      description: Number of allocated objects.
      type: gauge
    go_memstats_heap_released_bytes:
      default: true
      description: Number of heap bytes released to OS.
      type: gauge
    go_memstats_heap_sys_bytes:
      default: true
      description: Number of heap bytes obtained from system.
      type: gauge
    go_memstats_last_gc_time_seconds:
      default: true
      description: Number of seconds since 1970 of last garbage collection.
      type: gauge
    go_memstats_lookups:
      default: true
      description: Total number of pointer lookups.
      type: cumulative
    go_memstats_mallocs:
      default: true
      description: Total number of mallocs.
      type: cumulative
    go_memstats_mcache_inuse_bytes:
      default: true
      description: Number of bytes in use by mcache structures.
      type: gauge
    go_memstats_mcache_sys_bytes:
      default: true
      description: Number of bytes used for mcache structures obtained from system.
      type: gauge
    go_memstats_mspan_inuse_bytes:
      default: true
      description: Number of bytes in use by mspan structures.
      type: gauge
    go_memstats_mspan_sys_bytes:
      default: true
      description: Number of bytes used for mspan structures obtained from system.
      type: gauge
    go_memstats_next_gc_bytes:
      default: true
      description: Number of heap bytes when next garbage collection will take place.
      type: gauge
    go_memstats_other_sys_bytes:
      default: true
      description: Number of bytes used for other system allocations.
      type: gauge
    go_memstats_stack_inuse_bytes:
      default: true
      description: Number of bytes in use by the stack allocator.
      type: gauge
    go_memstats_stack_sys_bytes:
      default: true
      description: Number of bytes obtained from system for stack allocator.
      type: gauge
    go_memstats_sys_bytes:
      default: true
      description: Number of bytes obtained from system.
      type: gauge
    go_threads:
      default: true
      description: Number of OS threads created.
      type: gauge
    grpc_client_handled:
      default: true
      description: Total number of RPCs completed by the client, regardless of success
        or failure.
      type: cumulative
    grpc_client_msg_received:
      default: true
      description: Total number of RPC stream messages received by the client.
      type: cumulative
    grpc_client_msg_sent:
      default: true
      description: Total number of gRPC stream messages sent by the client.
      type: cumulative
    grpc_client_started:
      default: true
      description: Total number of RPCs started on the client.
      type: cumulative
    http_request_duration_microseconds_count:
      default: true
      description: The HTTP request latencies in microseconds. (count)
      type: cumulative
    http_request_duration_microseconds:
      default: true
      description: The HTTP request latencies in microseconds. (sum)
      type: cumulative
    http_request_duration_microseconds_quantile:
      default: true
      description: The HTTP request latencies in microseconds. (quantized)
      type: gauge
    http_request_size_bytes_count:
      default: true
      description: The HTTP request sizes in bytes. (count)
      type: cumulative
    http_request_size_bytes:
      default: true
      description: The HTTP request sizes in bytes. (sum)
      type: cumulative
    http_request_size_bytes_quantile:
      default: true
      description: The HTTP request sizes in bytes. (quantized)
      type: gauge
    http_requests:
      default: true
      description: Total number of HTTP requests made.
      type: cumulative
    http_response_size_bytes_count:
      default: true
      description: The HTTP response sizes in bytes. (count)
      type: cumulative
    http_response_size_bytes:
      default: true
      description: The HTTP response sizes in bytes. (sum)
      type: cumulative
    http_response_size_bytes_quantile:
      default: true
      description: The HTTP response sizes in bytes. (quantized)
      type: gauge
    kubernetes_build_info:
      default: true
      description: A metric with a constant '1' value labeled by major, minor, git
        version, git commit, git tree state, build date, Go version, and compiler
        from which Kubernetes was built, and platform on which it is running.
      type: gauge
    process_cpu_seconds:
      default: true
      description: Total user and system CPU time spent in seconds.
      type: cumulative
    process_max_fds:
      default: true
      description: Maximum number of open file descriptors.
      type: gauge
    process_open_fds:
      default: true
      description: Number of open file descriptors.
      type: gauge
    process_resident_memory_bytes:
      default: true
      description: Resident memory size in bytes.
      type: gauge
    process_start_time_seconds:
      default: true
      description: Start time of the process since unix epoch in seconds.
      type: gauge
    process_virtual_memory_bytes:
      default: true
      description: Virtual memory size in bytes.
      type: gauge
    process_virtual_memory_max_bytes:
      default: true
      description: Maximum amount of virtual memory available in bytes.
      type: gauge
    rest_client_request_duration_seconds_count:
      default: true
      description: Request latency in seconds. Broken down by verb and URL. (count)
      type: cumulative
    rest_client_request_duration_seconds:
      default: true
      description: Request latency in seconds. Broken down by verb and URL. (sum)
      type: cumulative
    rest_client_request_duration_seconds_bucket:
      default: true
      description: Request latency in seconds. Broken down by verb and URL. (bucket)
      type: cumulative
    rest_client_request_latency_seconds_count:
      default: true
      description: (Deprecated) Request latency in seconds. Broken down by verb and
        URL. (count)
      type: cumulative
    rest_client_request_latency_seconds:
      default: true
      description: (Deprecated) Request latency in seconds. Broken down by verb and
        URL. (sum)
      type: cumulative
    rest_client_request_latency_seconds_bucket:
      default: true
      description: (Deprecated) Request latency in seconds. Broken down by verb and
        URL. (bucket)
      type: cumulative
    rest_client_requests:
      default: true
      description: Number of HTTP requests, partitioned by status code, method, and
        host.
      type: cumulative
    ssh_tunnel_open_count:
      default: true
      description: Counter of ssh tunnel total open attempts
      type: cumulative
    ssh_tunnel_open_fail_count:
      default: true
      description: Counter of ssh tunnel failed open attempts
      type: cumulative
    workqueue_adds:
      default: true
      description: Total number of adds handled by workqueue
      type: cumulative
    workqueue_depth:
      default: true
      description: Current depth of workqueue
      type: gauge
    workqueue_longest_running_processor_seconds:
      default: true
      description: How many seconds has the longest running processor for workqueue
        been running.
      type: gauge
    workqueue_queue_duration_seconds_count:
      default: true
      description: How long in seconds an item stays in workqueue before being requested.
        (count)
      type: cumulative
    workqueue_queue_duration_seconds:
      default: true
      description: How long in seconds an item stays in workqueue before being requested.
        (sum)
      type: cumulative
    workqueue_queue_duration_seconds_bucket:
      default: true
      description: How long in seconds an item stays in workqueue before being requested.
        (bucket)
      type: cumulative
    workqueue_retries:
      default: true
      description: Total number of retries handled by workqueue
      type: cumulative
    workqueue_unfinished_work_seconds:
      default: true
      description: How many seconds of work has done that is in progress and hasn't
        been observed by work_duration. Large values indicate stuck threads. One can
        deduce the number of stuck threads by observing the rate at which this increases.
      type: gauge
    workqueue_work_duration_seconds_count:
      default: true
      description: How long in seconds processing an item from workqueue takes. (count)
      type: cumulative
    workqueue_work_duration_seconds:
      default: true
      description: How long in seconds processing an item from workqueue takes. (sum)
      type: cumulative
    workqueue_work_duration_seconds_bucket:
      default: true
      description: How long in seconds processing an item from workqueue takes. (bucket)
      type: cumulative